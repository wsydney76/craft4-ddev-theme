{% from '_macros/lib.twig' import img %}


{% set imgWidth = imgWidth ?? (block.width == 'default' ? theme.defaultBlockTypeWidth['image'] : block.width) %}
 {# TODO: Add responsive sizes #}


{% set image = image ?? block.image.one() %}
{% if image %}

    {% set colSpan = colSpan ?? 12 %}

    {% if columnsWidth is defined and columnsWidth != 'default' %}
        {% set width = theme.widths[columnsWidth ?? 'lg'] %}
    {% else %}
        {% set width = theme.widths[width ?? 'lg'] %}
    {% endif %}

    {% set width = ceil(width / 12 * colSpan) %}

    {% set aspectRatio = aspectRatio ?? (block.aspectRatio ?? 'auto') %}

    {% if aspectRatio == 'default' %}
        {% set aspectRatio = theme.defaultAspectRatio %}
    {% endif %}

    {% if aspectRatio == 'fullwidth' %}
        {% set transform = {width: theme.widths['full'], height: theme.fullwidthImageHeight} %}
    {% elseif aspectRatio != 'auto' %}
        {% set aspectRatio = aspectRatio|split(':') %}
        {% set height = floor(width / aspectRatio[0] * aspectRatio[1]) %}
        {% set transform = {width: width, height: height} %}
    {% else %}
        {% set transform = {width: width} %}
    {% endif %}


    {% set transform = transform|merge({format: 'webp'}) %}

    {% set captionRight = block.styles.contains('captionRight') ?? false %}
    {% set boxed = block.styles.contains('boxed') ?? false %}

    <figure class="{{ boxed ? 'border-2 border-border dark:border-gray-600 p-4 bg-white dark:bg-gray-800 shadow-lg' }} {{ captionRight ? 'md:flow-root ' }}">

        {{ img(image, transform, {imageEffects: block.imageEffects}) }}

        {% set caption = caption ?? block.caption %}

        {% if caption %}
            <figcaption
                    class="text-base {{ captionRight ? 'md:float-right md:w-1/2 mt-4 border-t-4 border-border pt-2' : 'italic' }}">
                {{ caption }}
            </figcaption>
        {% endif %}
    </figure>

{% endif %}

