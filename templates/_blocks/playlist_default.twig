{% from '_macros/lib.twig' import img %}

{% do view.registerAssetBundle('modules\\resources\\AmplitudeAssets', POS_HEAD) %}

{% set audios = block.audios.all %}
{% set songs = audios|map(audio => {
    url: audio.audio.one.url,
    name: audio.heading,
    artist: audio.artist,
    cover_art_url: audio.image.one.url({width:500, height: 250})}) %}

<div x-data="audioPlayer({{ songs|json_encode }})">


    {% for i, block in audios %}
        {% set image = block.image.one %}

        {% set duration = block.duration|split(':') %}

        {% if duration|length != 2 %}
            {% set duration = [9,99] %}
        {% endif %}

        <div class="bg-white dark:bg-dark-400 text-black shadow-lg mb-4 mt-8  lg:flex">
            <div class="lg:w-1/3">
                {% if image %}
                    {{ img(image, {width:500, height: 500} , {attrs: {class: 'object-cover object-top w-full h-full'}}) }}
                {% endif %}
            </div>
            <div class="lg:w-2/3 p-8">
                <div class="text-2xl font-semibold">{{ block.heading }}</div>
                <div class="mt-2">{{ block.artist }}</div>

                <div class="mt-4 flex justify-between">
                    <div>
                        <span class="amplitude-current-minutes" data-amplitude-song-index="{{ i }}"></span>:<span
                                class="amplitude-current-seconds" data-amplitude-song-index="{{ i }}"></span>
                    </div>

                    <div>
                    <span class="amplitude-duration-minutes"
                          data-amplitude-song-index="{{ i }}">{{ duration[0] }}</span>:<span
                                class="amplitude-duration-seconds"
                                data-amplitude-song-index="{{ i }}">{{ duration[1] }}</span>
                    </div>
                </div>
                <div class="mt-2 flex items-center space-x-4 justify-between">
                    <progress
                            class="amplitude-song-played-progress appearance-none w-full h-1.5 block cursor-pointer rounded-full h-2"
                            data-amplitude-song-index="{{ i }}"
                            @click="setAudioProgess({{ i }})"
                            id="song-played-progress-{{ i+1 }}"></progress>

                    <button class="relative" x-data="{volumeOpen: false}" @click="volumeOpen = !volumeOpen">
                        <div class="h-6 w-6 text-gray-500" @click.outside="volumeOpen=false">
                            <img src="/assets/icons/volume-up.svg">
                        </div>
                        <div class="absolute bottom-6 right-0 p-4 bg-[#43434C]"
                             x-show="volumeOpen"
                             @click.stop="">
                            <input type="range" class="amplitude-volume-slider"/>
                        </div>
                    </button>
                </div>
                <div class="flex justify-center space-x-12 items-center mt-6">
                    {% if not loop.first %}
                        <button class="amplitude-prev w-7 h-6 transform scale-75"></button>
                    {% else %}
                        <div class="w-7 h-6"></div>
                    {% endif %}


                    <button class="amplitude-play-pause w-10 h-11 transform scale-75"
                            data-amplitude-song-index="{{ i }}"></button>

                    {% if not loop.last %}
                        <button class="amplitude-next w-7 h-6 transform scale-75"></button>
                    {% else %}
                        <div class="w-7 h-6"></div>
                    {% endif %}


                </div>
            </div>
        </div>
    {% endfor %}


</div>

<div id="preload" class="hidden">
    <img src="/assets/icons/previous.svg"/>
    <img src="/assets/icons/play.svg"/>
    <img src="/assets/icons/pause.svg"/>
    <img src="/assets/icons/next.svg"/>
</div>

{% js at head %}
document.addEventListener('alpine:init', () => {
    Alpine.data('audioPlayer', (initialSongs) => ({

        songs: initialSongs,
        index: 1,
        init() {
            Amplitude.init({songs: this.songs})
        },

        setAudioProgess(i) {

            if (Amplitude.getActiveIndex() == i) {
                var offset = this.$el.getBoundingClientRect();
                var x = this.$event.pageX - offset.left;
                Amplitude.setSongPlayedPercentage((parseFloat(x) / parseFloat(this.$el.offsetWidth)) * 100);
            }

        }

    }))
})
{% endjs %}

{% css %}
button.amplitude-prev {
    background: url("/assets/icons/previous.svg");
}


button.amplitude-play-pause.amplitude-paused {
    background: url("/assets/icons/play.svg");
}

button.amplitude-play-pause.amplitude-playing {
    background: url("/assets/icons/pause.svg");
}

button.amplitude-next {
    background: url("/assets/icons/next.svg");
}


progress.amplitude-song-played-progress:not([value]) {
    background-color: #313252;
}


progress[value]::-webkit-progress-bar {
    background-color: #d7dee3;

}

progress[value]::-moz-progress-bar {
    background-color: #00a0ff;

}

progress[value]::-webkit-progress-value {
    background-color: #00a0ff;

}
{% endcss %}
